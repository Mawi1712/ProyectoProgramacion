@model DondeComemos.Models.HomeViewModel
@{
    ViewData["Title"] = "Inicio";
}

@await Html.PartialAsync("Partials/_Hero")
@await Html.PartialAsync("Partials/_Favoritos", Model.Favoritos)

<!-- Mapa Mejorado con Restaurantes -->
<section class="py-5 bg-light">
    <div class="container">
        <h2 class="fw-bold mb-4 text-center">
            <i class="bi bi-geo-alt-fill text-danger"></i> Restaurantes en Arequipa
        </h2>
        <p class="text-center text-muted mb-4">
            Explora los mejores restaurantes cerca de ti en el mapa interactivo
        </p>
        
        <div class="card shadow-sm border-0">
            <div class="card-body p-0">
                <div id="mapHome" style="height: 500px; width: 100%;"></div>
            </div>
        </div>

        <div class="text-center mt-4">
            <a class="btn btn-primary btn-lg" asp-controller="Restaurantes" asp-action="Search">
                <i class="bi bi-search"></i> Ver Todos los Restaurantes
            </a>
        </div>
    </div>
</section>

@await Html.PartialAsync("Partials/_Reseñas", Model.Reseñas)
@await Html.PartialAsync("Partials/_CTA")

@section Scripts {
    <script src="https://maps.googleapis.com/maps/api/js?key=TU_API_KEY_AQUI"></script>
    <script>
        function initHomeMap() {
            // Centro de Arequipa
            const arequipa = { lat: -16.409047, lng: -71.537451 };
            
            const map = new google.maps.Map(document.getElementById("mapHome"), {
                zoom: 13,
                center: arequipa,
                styles: [
                    {
                        featureType: "poi",
                        elementType: "labels",
                        stylers: [{ visibility: "off" }]
                    }
                ]
            });

            // Aquí puedes cargar los restaurantes desde tu base de datos
            // Por ahora, pondremos algunos ejemplos
            fetch('/api/restaurantes/mapa')
                .then(response => response.json())
                .then(restaurantes => {
                    restaurantes.forEach(restaurante => {
                        if (restaurante.latitud && restaurante.longitud) {
                            const marker = new google.maps.Marker({
                                position: { lat: restaurante.latitud, lng: restaurante.longitud },
                                map: map,
                                title: restaurante.nombre,
                                icon: {
                                    url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png"
                                }
                            });

                            const infoWindow = new google.maps.InfoWindow({
                                content: `
                                    <div style="max-width: 250px;">
                                        <h6 class="fw-bold mb-2">${restaurante.nombre}</h6>
                                        ${restaurante.imagenUrl ? `<img src="${restaurante.imagenUrl}" style="width:100%; height:120px; object-fit:cover; margin-bottom:8px; border-radius:4px;" />` : ''}
                                        <p class="small text-muted mb-2">${restaurante.descripcion.substring(0, 100)}...</p>
                                        <p class="small mb-1"><i class="bi bi-geo-alt"></i> ${restaurante.direccion}</p>
                                        <p class="small mb-2">⭐ ${restaurante.rating}/5</p>
                                        <a href="/Restaurantes/Details/${restaurante.id}" class="btn btn-primary btn-sm w-100">Ver Detalles</a>
                                    </div>
                                `
                            });

                            marker.addListener("click", () => {
                                infoWindow.open(map, marker);
                            });
                        }
                    });
                })
                .catch(error => {
                    console.error('Error cargando restaurantes:', error);
                });

            // Botón para centrar en ubicación del usuario
            const locationButton = document.createElement("button");
            locationButton.textContent = "Mi Ubicación";
            locationButton.classList.add("btn", "btn-primary", "btn-sm", "m-2");
            map.controls[google.maps.ControlPosition.TOP_RIGHT].push(locationButton);

            locationButton.addEventListener("click", () => {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(
                        (position) => {
                            const pos = {
                                lat: position.coords.latitude,
                                lng: position.coords.longitude,
                            };
                            map.setCenter(pos);
                            new google.maps.Marker({
                                position: pos,
                                map: map,
                                icon: {
                                    url: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png"
                                },
                                title: "Tu ubicación"
                            });
                        },
                        () => {
                            alert("No se pudo obtener tu ubicación");
                        }
                    );
                }
            });
        }

        window.addEventListener('load', initHomeMap);
    </script>
}